Commandos Git

adicionar ao commit
git add <file>
retirar do commit
receba o ultimo commit e com o descritivo de sua hash
git reset --hard HEAD
reverta seu repositório local para o ultimo comit HEAD utilizando a hash necessária
git revert <hash>

consolida alterações a serem enviadas
git commit -m "id: meu primeiro commit"
envia as alterações para a branch remota
git push
pega as informações da branch remota
git pull
---

Comandos Linux usados na aula:

Ir a uma pasta
cd <path>

Listar arquivos da pasta atual
ls
---

Convenção de nomes:

develop: branch de de desenvolvimento, unifica o trabalho de todos os programadores
master ou main: é onde fica nosso código fonte oficial, que é aplicado em produção
release-candidate: é a versão em testes que vai para produção, ou seja que irá para a branch main
release-*: são as várias versões do sistema

feature/id-descricao: este formato de branch é para novas funcionalidades do sistema
bug/id-descricao: este formato de branch é para correções de bugs que não impactam em produção ou não são criticos
hotfix/id-descricao: esta branch é para correções de problemas em produção
---

Comandos de branch

listar branch
git branch --list

entrar/utilizar na branch
git checkout <branch-name>

criar branch
git branch <branch-name>

criar branch e utiliza-la
git checkout -b <branch-name>

para subir a branch para o repositório remoto
git push --set-upstream origin develop

Excluir branch localmente
git branch -D <branch-name>

Excluir a branch remotamente
git push origin --delete <branch-name>

Baixar todas as branchs criadas no repositório remoto
git remote update origin

Baixar todas as branchs e excluir as referencias, conforme o que há no repositório
git remote update origin --prune

Para baixar alterações de outra branch
git pull origin develop
---

Executar essa sequencia de comando:
git branch <branch-name>
git checkout <branch-name>

é o mesmo que executar somente essa:
git checkout -b <branch-name>
---

Em um projeto

git checkout develop
git pull
checa se a branch já existe, se não existe cria
git checkout -b <branch-name>